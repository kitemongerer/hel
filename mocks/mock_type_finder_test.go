// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package mocks_test

import "go/ast"

type mockTypeFinder struct {
	ExportedTypesCalled chan bool
	ExportedTypesOutput struct {
		Types chan []*ast.TypeSpec
	}
	DependentsCalled chan bool
	DependentsInput  struct {
		Inter chan *ast.InterfaceType
	}
	DependentsOutput struct {
		Dependents chan []*ast.TypeSpec
	}
}

func newMockTypeFinder() *mockTypeFinder {
	m := &mockTypeFinder{}
	m.ExportedTypesCalled = make(chan bool, 100)
	m.ExportedTypesOutput.Types = make(chan []*ast.TypeSpec, 100)
	m.DependentsCalled = make(chan bool, 100)
	m.DependentsInput.Inter = make(chan *ast.InterfaceType, 100)
	m.DependentsOutput.Dependents = make(chan []*ast.TypeSpec, 100)
	return m
}
func (m *mockTypeFinder) ExportedTypes() (types []*ast.TypeSpec) {
	m.ExportedTypesCalled <- true
	return <-m.ExportedTypesOutput.Types
}
func (m *mockTypeFinder) Dependents(inter *ast.InterfaceType) (dependents []*ast.TypeSpec) {
	m.DependentsCalled <- true
	m.DependentsInput.Inter <- inter
	return <-m.DependentsOutput.Dependents
}
